/*
 *     SocialLedge.com - Copyright (C) 2013
 *
 *     This file is part of free software framework for embedded processors.
 *     You can use it and/or distribute it as long as this copyright header
 *     remains unmodified.  The code is free for personal use and requires
 *     permission to use in a commercial product.
 *
 *      THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
 *      OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
 *      MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
 *      I SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
 *      CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
 *
 *     You can reach the author of this software at :
 *          p r e e t . w i k i @ g m a i l . c o m
 */

/**
 * @file
 * @brief This is the application entry point.
 */

#include <stdio.h>
#include "utilities.h"
#include "io.hpp"
#include <tasks.hpp>




void vProducerTask(void *pvParamters){

    QueueHandle_t *sample_queue = (QueueHandle_t *) pvParamters;
    Light_Sensor light_sensor = Light_Sensor::getInstance();
    uint8_t counter = 0;
    uint16_t light_val = 0;
    while(1){
        if (counter == 100){

        }
        else{
            light_sensor.getRawValue();
        }

    }

}

void vConsumerTask(void *pvParameters){

}

void vWatchDogTask(void *pvParameters){

}

int main(void)
{
    QueueHandle_t sample_queue =  xQueueCreate(10, sizeof(uint8_t));
    scheduler_add_task(new terminalTask(PRIORITY_HIGH));


    xTaskCreate(vProducerTask, "Producer", 1024, &sample_queue, PRIORITY_MEDIUM, NULL);
    xTaskCreate(vConsumerTask, "Consumer", 1024, NULL, PRIORITY_MEDIUM, NULL);
    xTaskCreate(vWatchDogTask, "Watchdog", 1024, NULL, PRIORITY_HIGH, NULL);
    scheduler_start();
    return -1;
}
